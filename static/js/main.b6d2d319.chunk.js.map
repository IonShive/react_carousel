{"version":3,"sources":["types.ts","components/Carousel/Carousel.tsx","App.tsx","index.tsx"],"names":["InputId","Carousel","images","margin","step","frameSize","itemWidth","animationDuration","infinite","useState","currentImage","setCurrentImage","maxImages","length","isDisabledPrev","isDisabledNext","className","style","width","transition","map","image","index","transform","src","alt","type","onClick","disabled","App","options","setOptions","handleInput","event","target","id","prevOptions","value","htmlFor","min","max","onChange","role","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b6d2d319.chunk.js","sourcesContent":["export interface State {\n  step: number;\n  margin: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n  infinite: boolean;\n}\n\nexport enum InputId {\n  itemId = 'itemWidth',\n  marginId = 'margin',\n  frameId = 'frameSize',\n  stepId = 'step',\n  animationDurationId = 'animationDuration',\n  infiniteId = 'infinite',\n}\n\nexport type InputEvent = React.ChangeEvent<HTMLInputElement>\n& { target: { id: keyof typeof InputId } };\n\nexport type CarouselProps = {\n  images: string[],\n  step: number,\n  margin: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n  infinite: boolean,\n};\n","import React, { useState } from 'react';\nimport { CarouselProps } from '../../types';\nimport './Carousel.scss';\n\nconst Carousel: React.FC<CarouselProps> = ({\n  images,\n  margin,\n  step,\n  frameSize,\n  itemWidth,\n  animationDuration,\n  infinite,\n}) => {\n  const [currentImage, setCurrentImage] = useState(0);\n  const maxImages = images.length - frameSize;\n  const isDisabledPrev = currentImage === 0 && !infinite;\n  const isDisabledNext = currentImage === maxImages && !infinite;\n\n  function handlePrev() {\n    return (\n      currentImage !== 0\n        ? setCurrentImage(currentImage - step >= 0\n          ? currentImage - step\n          : 0)\n        : setCurrentImage(maxImages)\n    );\n  }\n\n  function handleNext() {\n    return (\n      currentImage !== maxImages\n        ? setCurrentImage(currentImage + step <= maxImages\n          ? currentImage + step\n          : maxImages)\n        : setCurrentImage(0)\n    );\n  }\n\n  return (\n    <div\n      className=\"Carousel\"\n      style={{\n        width: `${frameSize * (itemWidth + margin * 2)}px`,\n        transition: `${animationDuration}ms`,\n      }}\n    >\n      <ul className=\"Carousel__list\">\n        {images.map((image, index) => (\n          <li\n            key={image}\n            style={{\n              transform: `translateX(${-(currentImage * (itemWidth + margin * 2))}px)`,\n              transition: `transform ${animationDuration}ms ease`,\n            }}\n          >\n            <img\n              className=\"Carousel__img\"\n              style={{\n                margin: `0 ${margin}px`,\n                transition: `margin ${animationDuration}ms ease`,\n              }}\n              src={image}\n              alt={`${index + 1}`}\n              width={itemWidth}\n            />\n          </li>\n        ))}\n      </ul>\n\n      <div className=\"Carousel__controls\">\n        <button\n          className={\n            isDisabledPrev\n              ? 'Carousel__btn Carousel__btn--disable'\n              : 'Carousel__btn Carousel__btn--active'\n          }\n          type=\"button\"\n          onClick={handlePrev}\n          disabled={isDisabledPrev}\n        >\n          Prev\n        </button>\n\n        <button\n          className={\n            isDisabledNext\n              ? 'Carousel__btn Carousel__btn--disable'\n              : 'Carousel__btn Carousel__btn--active'\n          }\n          data-cy=\"next\"\n          type=\"button\"\n          onClick={handleNext}\n          disabled={isDisabledNext}\n        >\n          Next\n        </button>\n      </div>\n\n    </div>\n  );\n};\n\nexport default Carousel;\n","import React, { useState } from 'react';\nimport { InputId, InputEvent, State } from './types';\nimport Carousel from './components/Carousel/Carousel';\nimport './App.scss';\n\nconst images = [\n  './img/1.png',\n  './img/2.png',\n  './img/3.png',\n  './img/4.png',\n  './img/5.png',\n  './img/6.png',\n  './img/7.png',\n  './img/8.png',\n  './img/9.png',\n  './img/10.png',\n];\n\nconst App: React.FC = () => {\n  const [options, setOptions] = useState<State>({\n    step: 3,\n    margin: 15,\n    frameSize: 4,\n    itemWidth: 100,\n    animationDuration: 500,\n    infinite: false,\n  });\n\n  function handleInput(event: InputEvent) {\n    if (event.target.id === 'infiniteId') {\n      setOptions(prevOptions => ({\n        ...prevOptions,\n        [InputId[event.target.id]]: !prevOptions.infinite,\n      }));\n\n      return;\n    }\n\n    setOptions(prevOptions => ({\n      ...prevOptions,\n      [InputId[event.target.id]]: +event.target.value,\n    }));\n  }\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"title\" data-cy=\"title\">{`Carousel with ${images.length} images`}</h1>\n      <div className=\"App__wrapper\">\n        <label className=\"App__label\" htmlFor=\"itemId\">\n          {'Item Width: '}\n          <input\n            className=\"App__input\"\n            id=\"itemId\"\n            type=\"number\"\n            min={70}\n            max={260}\n            step={5}\n            value={options.itemWidth}\n            onChange={handleInput}\n          />\n        </label>\n\n        <label className=\"App__label\" htmlFor=\"marginId\">\n          {'Item Margin: '}\n          <input\n            className=\"App__input\"\n            id=\"marginId\"\n            type=\"number\"\n            min={5}\n            max={40}\n            step={5}\n            value={options.margin}\n            onChange={handleInput}\n          />\n        </label>\n\n        <label className=\"App__label\" htmlFor=\"frameId\">\n          {'Frame Size: '}\n          <input\n            className=\"App__input\"\n            id=\"frameId\"\n            type=\"number\"\n            min={1}\n            max={images.length}\n            step={1}\n            value={options.frameSize}\n            onChange={handleInput}\n          />\n        </label>\n\n        <label className=\"App__label\" htmlFor=\"stepId\">\n          {'Step: '}\n          <input\n            className=\"App__input\"\n            id=\"stepId\"\n            type=\"number\"\n            min={1}\n            max={options.frameSize}\n            value={options.step}\n            onChange={handleInput}\n          />\n        </label>\n\n        <label\n          className=\"App__label\"\n          htmlFor=\"animationDurationId\"\n        >\n          {'Animation duration: '}\n          <input\n            className=\"App__input\"\n            id=\"animationDurationId\"\n            type=\"number\"\n            min={0}\n            max={2500}\n            step={250}\n            value={options.animationDuration}\n            onChange={handleInput}\n          />\n        </label>\n\n        <label\n          className=\"App__label\"\n          htmlFor=\"infiniteId\"\n        >\n          Infinite :\n          <input\n            className=\"App__checkbox\"\n            id=\"infiniteId\"\n            type=\"checkbox\"\n            role=\"switch\"\n            onChange={handleInput}\n          />\n        </label>\n      </div>\n\n      <Carousel\n        images={images}\n        margin={options.margin}\n        step={options.step}\n        frameSize={options.frameSize}\n        itemWidth={options.itemWidth}\n        animationDuration={options.animationDuration}\n        infinite={options.infinite}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}